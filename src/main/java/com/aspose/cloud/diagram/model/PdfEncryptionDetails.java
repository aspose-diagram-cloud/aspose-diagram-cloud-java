/*
 * Aspose.Diagram Cloud API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.aspose.cloud.diagram.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PdfEncryptionDetails
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-23T16:24:55.850+08:00")
public class PdfEncryptionDetails {
  /**
   * Gets or Sets permissions
   */
  @JsonAdapter(PermissionsEnum.Adapter.class)
  public enum PermissionsEnum {
    DISALLOWALL("DisallowAll"),
    
    PRINTING("Printing"),
    
    MODIFYCONTENTS("ModifyContents"),
    
    CONTENTCOPY("ContentCopy"),
    
    MODIFYANNOTATIONS("ModifyAnnotations"),
    
    FILLIN("FillIn"),
    
    CONTENTCOPYFORACCESSIBILITY("ContentCopyForAccessibility"),
    
    DOCUMENTASSEMBLY("DocumentAssembly"),
    
    HIGHRESOLUTIONPRINTING("HighResolutionPrinting"),
    
    ALLOWALL("AllowAll");

    private String value;

    PermissionsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PermissionsEnum fromValue(String text) {
      for (PermissionsEnum b : PermissionsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PermissionsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PermissionsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PermissionsEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PermissionsEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("Permissions")
  private PermissionsEnum permissions = null;

  /**
   * Gets or Sets encryptionAlgorithm
   */
  @JsonAdapter(EncryptionAlgorithmEnum.Adapter.class)
  public enum EncryptionAlgorithmEnum {
    _40("RC4_40"),
    
    _128("RC4_128");

    private String value;

    EncryptionAlgorithmEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EncryptionAlgorithmEnum fromValue(String text) {
      for (EncryptionAlgorithmEnum b : EncryptionAlgorithmEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<EncryptionAlgorithmEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EncryptionAlgorithmEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EncryptionAlgorithmEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return EncryptionAlgorithmEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("EncryptionAlgorithm")
  private EncryptionAlgorithmEnum encryptionAlgorithm = null;

  @SerializedName("UserPassword")
  private String userPassword = null;

  @SerializedName("OwnerPassword")
  private String ownerPassword = null;

  public PdfEncryptionDetails permissions(PermissionsEnum permissions) {
    this.permissions = permissions;
    return this;
  }

   /**
   * Get permissions
   * @return permissions
  **/
  @ApiModelProperty(value = "")
  public PermissionsEnum getPermissions() {
    return permissions;
  }

  public void setPermissions(PermissionsEnum permissions) {
    this.permissions = permissions;
  }

  public PdfEncryptionDetails encryptionAlgorithm(EncryptionAlgorithmEnum encryptionAlgorithm) {
    this.encryptionAlgorithm = encryptionAlgorithm;
    return this;
  }

   /**
   * Get encryptionAlgorithm
   * @return encryptionAlgorithm
  **/
  @ApiModelProperty(value = "")
  public EncryptionAlgorithmEnum getEncryptionAlgorithm() {
    return encryptionAlgorithm;
  }

  public void setEncryptionAlgorithm(EncryptionAlgorithmEnum encryptionAlgorithm) {
    this.encryptionAlgorithm = encryptionAlgorithm;
  }

  public PdfEncryptionDetails userPassword(String userPassword) {
    this.userPassword = userPassword;
    return this;
  }

   /**
   * Get userPassword
   * @return userPassword
  **/
  @ApiModelProperty(value = "")
  public String getUserPassword() {
    return userPassword;
  }

  public void setUserPassword(String userPassword) {
    this.userPassword = userPassword;
  }

  public PdfEncryptionDetails ownerPassword(String ownerPassword) {
    this.ownerPassword = ownerPassword;
    return this;
  }

   /**
   * Get ownerPassword
   * @return ownerPassword
  **/
  @ApiModelProperty(value = "")
  public String getOwnerPassword() {
    return ownerPassword;
  }

  public void setOwnerPassword(String ownerPassword) {
    this.ownerPassword = ownerPassword;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PdfEncryptionDetails pdfEncryptionDetails = (PdfEncryptionDetails) o;
    return Objects.equals(this.permissions, pdfEncryptionDetails.permissions) &&
        Objects.equals(this.encryptionAlgorithm, pdfEncryptionDetails.encryptionAlgorithm) &&
        Objects.equals(this.userPassword, pdfEncryptionDetails.userPassword) &&
        Objects.equals(this.ownerPassword, pdfEncryptionDetails.ownerPassword);
  }

  @Override
  public int hashCode() {
    return Objects.hash(permissions, encryptionAlgorithm, userPassword, ownerPassword);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PdfEncryptionDetails {\n");
    
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    encryptionAlgorithm: ").append(toIndentedString(encryptionAlgorithm)).append("\n");
    sb.append("    userPassword: ").append(toIndentedString(userPassword)).append("\n");
    sb.append("    ownerPassword: ").append(toIndentedString(ownerPassword)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

