/*
 * Aspose.Diagram Cloud API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.aspose.cloud.diagram.model;

import java.util.Objects;
import com.aspose.cloud.diagram.model.ShapeStyleData;
import com.aspose.cloud.diagram.model.TextStyleData;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DrawShapeData
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-17T15:16:20.992+08:00")

public class DrawShapeData {
  @SerializedName("PinX")
  private Double pinX = null;

  @SerializedName("PinY")
  private Double pinY = null;

  @SerializedName("Width")
  private Double width = null;

  @SerializedName("Height")
  private Double height = null;

  @SerializedName("ShapeStyleData")
  private ShapeStyleData shapeStyleData = null;

  @SerializedName("Text")
  private String text = null;

  @SerializedName("TextStyleData")
  private TextStyleData textStyleData = null;

  public DrawShapeData pinX(Double pinX) {
    this.pinX = pinX;
    return this;
  }

   /**
   * Get pinX
   * @return pinX
  **/
  @ApiModelProperty(required = true, value = "")
  public Double getPinX() {
    return pinX;
  }

  public void setPinX(Double pinX) {
    this.pinX = pinX;
  }

  public DrawShapeData pinY(Double pinY) {
    this.pinY = pinY;
    return this;
  }

   /**
   * Get pinY
   * @return pinY
  **/
  @ApiModelProperty(required = true, value = "")
  public Double getPinY() {
    return pinY;
  }

  public void setPinY(Double pinY) {
    this.pinY = pinY;
  }

  public DrawShapeData width(Double width) {
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @ApiModelProperty(required = true, value = "")
  public Double getWidth() {
    return width;
  }

  public void setWidth(Double width) {
    this.width = width;
  }

  public DrawShapeData height(Double height) {
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @ApiModelProperty(required = true, value = "")
  public Double getHeight() {
    return height;
  }

  public void setHeight(Double height) {
    this.height = height;
  }

  public DrawShapeData shapeStyleData(ShapeStyleData shapeStyleData) {
    this.shapeStyleData = shapeStyleData;
    return this;
  }

   /**
   * Get shapeStyleData
   * @return shapeStyleData
  **/
  @ApiModelProperty(value = "")
  public ShapeStyleData getShapeStyleData() {
    return shapeStyleData;
  }

  public void setShapeStyleData(ShapeStyleData shapeStyleData) {
    this.shapeStyleData = shapeStyleData;
  }

  public DrawShapeData text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @ApiModelProperty(value = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public DrawShapeData textStyleData(TextStyleData textStyleData) {
    this.textStyleData = textStyleData;
    return this;
  }

   /**
   * Get textStyleData
   * @return textStyleData
  **/
  @ApiModelProperty(value = "")
  public TextStyleData getTextStyleData() {
    return textStyleData;
  }

  public void setTextStyleData(TextStyleData textStyleData) {
    this.textStyleData = textStyleData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DrawShapeData drawShapeData = (DrawShapeData) o;
    return Objects.equals(this.pinX, drawShapeData.pinX) &&
        Objects.equals(this.pinY, drawShapeData.pinY) &&
        Objects.equals(this.width, drawShapeData.width) &&
        Objects.equals(this.height, drawShapeData.height) &&
        Objects.equals(this.shapeStyleData, drawShapeData.shapeStyleData) &&
        Objects.equals(this.text, drawShapeData.text) &&
        Objects.equals(this.textStyleData, drawShapeData.textStyleData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pinX, pinY, width, height, shapeStyleData, text, textStyleData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DrawShapeData {\n");
    
    sb.append("    pinX: ").append(toIndentedString(pinX)).append("\n");
    sb.append("    pinY: ").append(toIndentedString(pinY)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    shapeStyleData: ").append(toIndentedString(shapeStyleData)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    textStyleData: ").append(toIndentedString(textStyleData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

