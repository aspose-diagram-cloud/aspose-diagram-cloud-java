/*
 * Aspose.Diagram Cloud API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.aspose.cloud.diagram.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Shape style setting
 */
@ApiModel(description = "Shape style setting")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-17T15:16:20.992+08:00")
public class ShapeStyleData {
  @SerializedName("BackGroundColor")
  private String backGroundColor = null;

  public ShapeStyleData backGroundColor(String backGroundColor) {
    this.backGroundColor = backGroundColor;
    return this;
  }

   /**
   * the background color of shape,like &#39;#000000&#39;
   * @return backGroundColor
  **/
  @ApiModelProperty(value = "the background color of shape,like '#000000'")
  public String getBackGroundColor() {
    return backGroundColor;
  }

  public void setBackGroundColor(String backGroundColor) {
    this.backGroundColor = backGroundColor;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShapeStyleData shapeStyleData = (ShapeStyleData) o;
    return Objects.equals(this.backGroundColor, shapeStyleData.backGroundColor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backGroundColor);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShapeStyleData {\n");
    
    sb.append("    backGroundColor: ").append(toIndentedString(backGroundColor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

